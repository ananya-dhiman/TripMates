CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    phone VARCHAR(20),
   gender VARCHAR(20), 
    age INT, 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE packages (
    package_id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    destination VARCHAR(255) NOT NULL,
    activities TEXT,  
    price INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,   
    size INT NOT NULL,
    totalsize INT NOT NULL,
    agegroup INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE destinations (
    destination_id SERIAL PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE activities (
    activity_id SERIAL PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE package_destinations (
    package_id INT REFERENCES packages(package_id) ON DELETE CASCADE,
    destination_id INT REFERENCES destinations(destination_id) ON DELETE CASCADE,
    PRIMARY KEY (package_id, destination_id)
);

CREATE TABLE package_activities (
    package_id INT REFERENCES packages(package_id) ON DELETE CASCADE,
    activity_id INT REFERENCES activities(activity_id) ON DELETE CASCADE,
    PRIMARY KEY (package_id, activity_id)
);

CREATE TABLE bookings (
    booking_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
    package_id INT REFERENCES packages(package_id) ON DELETE CASCADE,
    booking_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) DEFAULT 'pending',  //Pending done
    total_price INT NOT NULL,
    UNIQUE (user_id, package_id)
);

CREATE TABLE payments (
    payment_id SERIAL PRIMARY KEY,
    booking_id INT REFERENCES bookings(booking_id) ON DELETE CASCADE,
    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,
    amount INT NOT NULL,
    payment_status VARCHAR(50) DEFAULT 'pending',      
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


